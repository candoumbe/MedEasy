@page "/register"
@inject IIdentityApi LoginService
@namespace MedEasy.Web.Pages
@inject NavigationManager NavigationService
@inject ILocalStorageService LocalStorage
@using Identity.Models.v2


<Blazorise.Form>
    <Validations Model="RegisterForm">

        <Validation>
            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is3">Name</FieldLabel>
                <FieldBody>
                    <TextEdit @bind-Text="RegisterForm.Name" Casing="CharacterCasing.Title">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </FieldBody>
            </Field>
        </Validation>
        <Validation>
            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is3" For="Email">Email</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is6">
                    <TextEdit Role="TextRole.Email" @bind-Text="RegisterForm.Email">
                        <Feedback>
                            <ValidationError Tooltip="true" />
                        </Feedback>
                    </TextEdit>
                    <FieldHelp>Your email that will be used to send you notification about reminders about your appointments.</FieldHelp>
                </FieldBody>
            </Field>
        </Validation>
        <Validation>
            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is3">Password</FieldLabel>
                <FieldBody>
                    <TextEdit Role="TextRole.Password" @bind-Text="RegisterForm.Password">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </FieldBody>
            </Field>
        </Validation>
        <Validation>
            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is3">Confirm password</FieldLabel>
                <FieldBody>
                    <TextEdit Role="TextRole.Password" @bind-Text="RegisterForm.ConfirmPassword">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </FieldBody>
            </Field>
        </Validation>

    </Validations>

    <Field Horizontal="true" JustifyContent="JustifyContent.Center">
        <Button Type="ButtonType.Submit" Color="Color.Success" PreventDefaultOnSubmit="true"
                Clicked="async () => await RegisterAndLogIn()"
                >Create my account</Button>
        or <Blazorise.Link To="/login">I have an account</Blazorise.Link>
    </Field>
</Blazorise.Form>


@code{
    private Identity.Models.RegisterModel RegisterForm { get; set; } = new Identity.Models.RegisterModel();

    public string RegisterAccountErrorText { get; set; }

    private async Task RegisterAndLogIn()
    {
        ApiResponse<BearerTokenModel> response = await LoginService.Register(RegisterForm);

        if (response.IsSuccessStatusCode)
        {
            await LocalStorage.SetItemAsync("bearer", response.Content);
            NavigationService.NavigateTo("/home");
        }
        else
        {
            RegisterAccountErrorText = response.ReasonPhrase;

        }
    }
}