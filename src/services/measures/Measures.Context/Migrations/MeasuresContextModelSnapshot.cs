// <auto-generated />
using System;
using Measures.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Measures.Context.Migrations
{
    [DbContext(typeof(MeasuresContext))]
    partial class MeasuresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Measures.Objects.BloodPressure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<DateTimeOffset>("DateOfMeasure");

                    b.Property<float>("DiastolicPressure");

                    b.Property<Guid>("PatientId");

                    b.Property<float>("SystolicPressure");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .IsConcurrencyToken();

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("BloodPressure");
                });

            modelBuilder.Entity("Measures.Objects.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .IsConcurrencyToken();

                    b.HasKey("Id");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("Measures.Objects.Temperature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<DateTimeOffset>("DateOfMeasure");

                    b.Property<Guid>("PatientId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .IsConcurrencyToken();

                    b.Property<float>("Value");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Temperature");
                });

            modelBuilder.Entity("Measures.Objects.BloodPressure", b =>
                {
                    b.HasOne("Measures.Objects.Patient", "Patient")
                        .WithMany("BloodPressures")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Measures.Objects.Temperature", b =>
                {
                    b.HasOne("Measures.Objects.Patient", "Patient")
                        .WithMany("Temperatures")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
